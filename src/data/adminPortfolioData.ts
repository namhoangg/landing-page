// interface PathObject {
//   [key: string]: string;
// }

export const dataAdminPortfolio = {
  en: {
    youAreCreating: 'You are creating ',
    aNewPortfolio: 'a new portfolio!',
    youAreEditing: 'You are editing ',
    aPortfolio: 'a portfolio!',
    addNewPortfolioTitle: 'You are creating a new portfolio!',
    addNewPortfolioSuccessfully: 'Create a new portfolio successfully!',
    editPortfolioTitle: 'You are editing a portfolio!',
    editPortfolioSuccessfully: 'Update a portfolio successfully!',
    updatePortfolioStateSuccessfully: 'Update portfolio status successfully!',
    hidePortfolioSuccessfully: 'Hide portfolio successfully!',
    deletePortfolioSuccessfully: 'Delete portfolio successfully!',
    whatInterestingInside: "What's interesting inside?",
    insideTheReport: 'Inside the report',
    mainContent: 'Main content',
    required: 'This field should not be blank!',
    name: 'Name of portfolio',
    category: 'Category',
    imageThumbnail: 'Image Thumbnail',
    nameOfBV: 'Name of BVer',
    jobTitle: 'Job title',
    banner: 'Banner',
    mainPicture: 'Main picture',
    boxText: (index?: number) => `Box Text${index ? ' ' + index : ''}`,
    heading: (index?: number) => `Heading${index ? ' ' + index : ''}`,
    title: (index?: number) => `Title${index ? ' ' + index : ''}`,
    description: (index?: number) => `Description${index ? ' ' + index : ''}`,
    cover: (index?: number) => `Cover${index ? ' ' + index : ''}`,
    introduction: (index?: number) => `Introduction${index ? ' ' + index : ''}`,
    picture: (index?: number) => `Picture${index ? ' ' + index : ''}`,
    pdf: 'Upload File PDF',
    highlights: 'Highlights',
    mainParagraph: 'Main paragraph',
    shortDescription: 'Short Description',
    articleText: 'Article Text',
    slug: 'Slug',
    tags: 'Tags',
    status: 'Status',
    featured: 'Feature This Portfolio?',
    upload: 'Upload',
    button: {
      cancel: 'Cancel',
      saveAndPreview: 'Save & Preview',
    },
    option: {
      public: 'Public',
      private: 'Private',
      draft: 'Draft',
      caseStudy: 'Case study',
      esgReport: 'Esg report',
      innovationHub: 'Innovation hub',
    },
    note: {
      name: (from?: number, to?: number) =>
        `Title length should be ${from ?? 40} - ${to ?? 60} characters.`,
      description: (length?: number) => `Text length should be max ${length ?? 150} characters.`,
      tags: 'Seperate tags with commas.',
      format: (format?: string) => `Format: ${format ?? '.png, .jpg, .jpeg'}`,
      size: (size?: string) => `Size: ${size ?? '16:9'}`,
      max: (number?: number) => `Max: ${number ?? 5}MB`,
      heading: 'This section will show up on the banner',
    },
    placeholder: {
      image: 'The image should be:',
      category: 'Choose category',
      shortDescription: 'Enter short description',
    },
    enterSlug: 'The “slug” is the URL-friendly version of the name.',
    selectCategory: 'Select Category',

    validate: {
      errLengthTitle: 'Title length should be 40 - 60 characters.',
      errLengthDesc: (number?: number) => `Text length should be max ${number ?? 150} characters.`,
    },
  },
  vi: {
    youAreCreating: 'Bạn đang tạo  ',
    aNewPortfolio: 'một bài viết mới!',
    youAreEditing: 'Bạn đang chỉnh sửa ',
    aPortfolio: 'một bài viết mới!',
    addNewPortfolioTitle: 'Bạn đang tạo một bài viết mới!',
    addNewPortfolioSuccessfully: 'Tạo một bài viết mới thành công!',
    editPortfolioTitle: 'Bạn đang chỉnh sửa một bài viết!',
    editPortfolioSuccessfully: 'Chỉnh sửa bài viết thành công!',
    updatePortfolioStateSuccessfully: 'Cập nhật trạng thái bài viết thành công!',
    hidePortfolioSuccessfully: 'Ẩn bài viết thành công!',
    deletePortfolioSuccessfully: 'Xóa bài viết thành công!',
    whatInterestingInside: 'Có gì thú vị bên trong?',
    insideTheReport: 'Bên trong báo cáo',
    mainContent: 'Nội dung chính',
    required: 'Trường này không được để trống!',
    name: 'Tên danh mục đầu tư',
    category: 'Loại',
    imageThumbnail: 'Hình ảnh thu nhỏ',
    nameOfBV: 'Tên của BVer',
    jobTitle: 'Chức danh',
    banner: 'Banner',
    mainPicture: 'Hình ảnh chính',
    boxText: (index?: number) => `Hộp văn bản${index ? ' ' + index : ''}`,
    heading: (index?: number) => `Phần mở đầu${index ? ' ' + index : ''}`,
    title: (index?: number) => `Tiêu đề${index ? ' ' + index : ''}`,
    description: (index?: number) => `Mô tả${index ? ' ' + index : ''}`,
    cover: (index?: number) => `Ảnh bìa${index ? ' ' + index : ''}`,
    introduction: (index?: number) => `Giới thiệu${index ? ' ' + index : ''}`,
    picture: (index?: number) => `Bức tranh${index ? ' ' + index : ''}`,
    pdf: 'Tải lên tệp PDF',
    highlights: 'Điểm nổi bật',
    mainParagraph: 'Đoạn chính',
    shortDescription: 'Mô tả ngắn',
    articleText: 'Nội dung bài viết',
    slug: 'Slug',
    tags: 'Thẻ',
    status: 'Trạng thái',
    featured: 'Feature This Portfolio?',
    upload: 'Tải lên',
    button: {
      cancel: 'Hủy',
      saveAndPreview: 'Lưu & Xem trước',
    },
    option: {
      public: 'Công khai',
      private: 'Riêng tư',
      draft: 'Nháp',
      caseStudy: 'Case study',
      esgReport: 'Esg report',
      innovationHub: 'Innovation hub',
    },
    note: {
      name: (from?: number, to?: number) =>
        `Độ dài tiêu đề phải là ${from ?? 40} - ${to ?? 60} ký tự.`,
      tags: 'Phân cách các thẻ bằng dấu phẩy.',
      description: (length?: number) => `Độ dài văn bản nên tối đa ${length ?? 150} ký tự.`,
      format: (format?: string) => `Định dạng: ${format ?? '.png, .jpg, .jpeg'}`,
      size: (size?: string) => `Kích thước: ${size ?? '16:9'}`,
      max: (number?: number) => `Tối đa: ${number ?? 5}MB`,
      noPlaceholder: '--/--',
      heading: 'Phần này sẽ hiển thị trên banner',
    },
    placeholder: {
      image: 'Hình ảnh phải là:',
      category: 'Chọn danh mục',
      shortDescription: 'Nhập mô tả ngắn',
    },
    enterSlug: 'Phiên bản tên URL',
    selectCategory: 'Chọn danh mục',
    validate: {
      errLengthTitle: 'Độ dài tiêu đề phải là 40 - 60 ký tự.',
      errLengthDesc: (number?: number) => `Độ dài văn bản phải tối đa ${number ?? 150} ký tự.`,
    },
  },
};
